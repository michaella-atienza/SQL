# This is a SQL exploratory data analysis of the Spotify Top 50 Songs in 2021 from Kaggle 
# Data Source: https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021?resource=download


SELECT * FROM BIT_DB.Spotifydata;

-- Average duration in minutes
SELECT AVG(duration_ms)/1000/60
FROM BIT_DB.Spotifydata;

-- Count the number of songs in each time signature category.
SELECT Spotifydata.time_signature ,COUNT(*) 
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.time_signature;

--List the artists and their respective average danceability scores.
SELECT Spotifydata.artist_name ,AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.artist_name
ORDER BY AVG(danceability) DESC
LIMIT 10; 

-- Find the track with the lowest energy score among songs by Olivia Rodrigo.
SELECT Spotifydata.track_name , Spotifydata.energy
FROM BIT_DB.Spotifydata
WHERE Spotifydata.artist_name == 'Olivia Rodrigo'
ORDER BY energy 
LIMIT 1; 

-- List the artists who have more than two songs in the dataset.
SELECT artist_name, COUNT(Spotifydata.artist_name) as num_of_songs
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.artist_name
HAVING COUNT(Spotifydata.artist_name) > 2
ORDER BY num_of_songs DESC, artist_name;

-- Find the top three tracks with the lowest acousticness score among songs with a loudness less than -7.
SELECT Spotifydata.artist_name, Spotifydata.track_name, Spotifydata.acousticness, Spotifydata.loudness
FROM BIT_DB.Spotifydata
WHERE Spotifydata.loudness < -8
ORDER BY Spotifydata.acousticness, Spotifydata.loudness
LIMIT 3; 

-- Amount of major and minor songs
SELECT 
 CASE
    WHEN Spotifydata.song_mode = 0 THEN 'Minor'
    ELSE 'Major'
    END AS song_type,
COUNT(*)
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.song_mode;


--  Calculate the total number of songs in the dataset for each energy level ('high,' 'low,' and 'mid').
SELECT 
  energy_level,
  COUNT(*) AS total_songs
FROM (
  SELECT 
    *, 
    CASE 
      WHEN Spotifydata.energy > 0.7 THEN 'high'
      WHEN Spotifydata.energy < 0.5 THEN 'low'
      ELSE 'mid'
    END AS energy_level
  FROM BIT_DB.Spotifydata
) AS subquery
GROUP BY energy_level
ORDER BY -total_songs;

-- Calculate the average popularity for the artists in the Spotify data table. 
--Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH tempTable AS (
  SELECT
  AVG(popularity) as avg_popularity , Spotifydata.artist_name
  FROM  Spotifydata
  GROUP BY artist_name
)

SELECT artist_name, 
    avg_popularity, 
    'TOP STAR' AS tag
FROM tempTable 
WHERE avg_popularity >= 90;

